---
version: 2
jobs:
  spreadsheet:
    docker:
      - image: circleci/python:3.7.2
    environment:
      GS_YAML_FILE: "_data/matrix.yml"
    steps:
      - checkout
      - run:
          name: Pull google spreadsheet as csv
          command: ./.circleci/pull-sheet.sh
      - run: pip install --user pyyaml
      - run: mkdir -p _data && touch ${GS_YAML_FILE}
      - run:
          name: Convert to yaml
          command: ./.circleci/make-yaml.py
      - add_ssh_keys:
          fingerprints:
            - "83:1d:79:20:51:b1:43:e6:75:2c:30:a1:4b:8e:17:be"
      - run:
          name: Configure git
          command: |
            git config --global user.email "labplus@dia.govt.nz"
            git config --global user.name "Automation on circle-ci"
      - run:
          name: "Push update branch"
          command: |
            set -euv
            if ! git diff-index --quiet HEAD --; then
                export PR_BRANCH="spreadsheet-${CIRCLE_BUILD_NUM}"
                git checkout -b "${PR_BRANCH}"
                git add "${GS_YAML_FILE}"
                git commit -m "Updated report data for build ${CIRCLE_BUILD_NUM}"
                git push origin "${PR_BRANCH}"
            fi
  nodejsdeps:
    docker:
      - image: circleci/ruby:2.6.3-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-nodejs-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Install nodejs dependencies
          command: npm install
      - save_cache:
          key: v1-nodejs-deps-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
  rubydeps:
    docker:
      - image: circleci/ruby:2.6.3-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-ruby-deps-{{ checksum "Gemfile.lock" }}
      - run: gem install bundler
      - run:
          name: Install dependencies
          command: bundle check --path vendor/bundle || bundle install --deployment
      - save_cache:
          key: v1-ruby-deps-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
  build:
    docker:
      - image: circleci/ruby:2.6.3-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-ruby-deps-{{ checksum "Gemfile.lock" }}
      - run: gem install bundler
      - run:
          name: Install dependencies
          command: bundle check --path vendor/bundle || bundle install --deployment
      - run:
          name: Build site
          command: bundle exec jekyll build
      - save_cache:
          key: v1-site-build-{{ .Revision }}
          paths:
            - _site
  markdownlint:
    docker:
      - image: circleci/ruby:2.6.3-node
    steps:
      - checkout
      - run:
          name: "Install javascript dependencies"
          command: npm install
      - run: ls ./node_modules/markdownlint-cli/
      - run:
          name: markdown lint
          command: npm run test-markdown

  # yamllint:
  #   docker:
  #     - image: circleci/python:3.7.2
  #   steps:
  #     - checkout
  #     - run:
  #         name: Install yamllint
  #         command: sudo pip install --upgrade yamllint
  #     - run:
  #         name: Yaml linter
  #         command: yamllint .


  accessibility:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-site-build-{{ .Revision }}
            - v1-nodejs-deps-{{ checksum "package-lock.json" }}
      - run:
          name: "Install javascript dependencies"
          command: npm install
      - run: npm run test-accessibility
workflows:
  version: 2
  test_this_website:
    jobs:
      - rubydeps
      # - yamllint
      - nodejsdeps
      - build:
          requires:
            - rubydeps
      - markdownlint:
          requires:
            - nodejsdeps
      - accessibility:
          requires:
            - build
            - nodejsdeps
  update_data:
    jobs:
      - spreadsheet:
          filters:
            branches:
              only:
                - master
